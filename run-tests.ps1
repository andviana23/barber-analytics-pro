# üß™ Script de Execu√ß√£o de Testes - Barber Analytics Pro
# Autor: Andrey Viana
# Data: 28/10/2025

Write-Host "=" -NoNewline; for ($i=1; $i -le 70; $i++) { Write-Host "=" -NoNewline }; Write-Host ""
Write-Host "üß™ BARBER ANALYTICS PRO - SUITE DE TESTES" -ForegroundColor Cyan
Write-Host "=" -NoNewline; for ($i=1; $i -le 70; $i++) { Write-Host "=" -NoNewline }; Write-Host ""
Write-Host ""

# Verificar se node_modules existe
if (-Not (Test-Path "node_modules")) {
    Write-Host "‚ö†Ô∏è  node_modules n√£o encontrado. Instalando depend√™ncias..." -ForegroundColor Yellow
    npm install
    Write-Host ""
}

# Menu de op√ß√µes
Write-Host "Selecione o tipo de teste a executar:" -ForegroundColor Green
Write-Host ""
Write-Host "  [1] üî¨ Testes Unit√°rios (Vitest)"
Write-Host "  [2] üîó Testes de Integra√ß√£o (Vitest)"
Write-Host "  [3] üé≠ Testes E2E (Playwright)"
Write-Host "  [4] üåê Testes de Acessibilidade (Playwright + axe-core)"
Write-Host "  [5] üöÄ Testes de Performance (k6)"
Write-Host "  [6] üìä Todos os Testes (Completo)"
Write-Host "  [7] üìà Relat√≥rio de Cobertura"
Write-Host "  [0] ‚ùå Sair"
Write-Host ""

$choice = Read-Host "Digite o n√∫mero da op√ß√£o"

switch ($choice) {
    "1" {
        Write-Host ""
        Write-Host "üî¨ Executando Testes Unit√°rios..." -ForegroundColor Cyan
        Write-Host ""
        npm run test:unit
    }
    "2" {
        Write-Host ""
        Write-Host "üîó Executando Testes de Integra√ß√£o..." -ForegroundColor Cyan
        Write-Host ""
        Write-Host "‚ö†Ô∏è  IMPORTANTE: Certifique-se de que o .env est√° configurado com banco de TESTE" -ForegroundColor Yellow
        $confirm = Read-Host "Deseja continuar? (s/n)"
        if ($confirm -eq "s" -or $confirm -eq "S") {
            npm run test:integration
        } else {
            Write-Host "‚ùå Testes cancelados." -ForegroundColor Red
        }
    }
    "3" {
        Write-Host ""
        Write-Host "üé≠ Executando Testes E2E..." -ForegroundColor Cyan
        Write-Host ""
        Write-Host "‚ö†Ô∏è  IMPORTANTE: Servidor deve estar rodando em http://localhost:5173" -ForegroundColor Yellow
        $confirm = Read-Host "Servidor est√° rodando? (s/n)"
        if ($confirm -eq "s" -or $confirm -eq "S") {
            npx playwright test e2e/orders.spec.ts --headed
        } else {
            Write-Host "‚ùå Inicie o servidor com 'npm run dev' e tente novamente." -ForegroundColor Red
        }
    }
    "4" {
        Write-Host ""
        Write-Host "üåê Executando Testes de Acessibilidade..." -ForegroundColor Cyan
        Write-Host ""
        Write-Host "‚ö†Ô∏è  IMPORTANTE: Servidor deve estar rodando em http://localhost:5173" -ForegroundColor Yellow
        $confirm = Read-Host "Servidor est√° rodando? (s/n)"
        if ($confirm -eq "s" -or $confirm -eq "S") {
            npx playwright test tests/accessibility/a11y-audit.spec.ts --headed
            Write-Host ""
            Write-Host "üìÑ Relat√≥rio de acessibilidade salvo em: playwright-artifacts/accessibility-report.json" -ForegroundColor Green
        } else {
            Write-Host "‚ùå Inicie o servidor com 'npm run dev' e tente novamente." -ForegroundColor Red
        }
    }
    "5" {
        Write-Host ""
        Write-Host "üöÄ Executando Testes de Performance (k6)..." -ForegroundColor Cyan
        Write-Host ""
        
        # Verificar se k6 est√° instalado
        $k6Installed = Get-Command k6 -ErrorAction SilentlyContinue
        if (-Not $k6Installed) {
            Write-Host "‚ùå k6 n√£o est√° instalado." -ForegroundColor Red
            Write-Host ""
            Write-Host "Para instalar k6:" -ForegroundColor Yellow
            Write-Host "  Windows (Chocolatey): choco install k6"
            Write-Host "  Windows (Scoop): scoop install k6"
            Write-Host "  Ou baixe em: https://k6.io/docs/get-started/installation/"
        } else {
            Write-Host "‚ö†Ô∏è  IMPORTANTE: Configure as vari√°veis de ambiente:" -ForegroundColor Yellow
            Write-Host "  - SUPABASE_URL" -ForegroundColor Yellow
            Write-Host "  - SUPABASE_ANON_KEY" -ForegroundColor Yellow
            Write-Host ""
            $confirm = Read-Host "Vari√°veis configuradas? (s/n)"
            if ($confirm -eq "s" -or $confirm -eq "S") {
                k6 run tests/performance/orders-load-test.js
            } else {
                Write-Host "‚ùå Configure as vari√°veis e tente novamente." -ForegroundColor Red
            }
        }
    }
    "6" {
        Write-Host ""
        Write-Host "üìä Executando TODOS os Testes..." -ForegroundColor Cyan
        Write-Host ""
        
        # 1. Testes Unit√°rios
        Write-Host "1Ô∏è‚É£  Testes Unit√°rios..." -ForegroundColor Magenta
        npm run test:unit
        
        # 2. Testes de Integra√ß√£o
        Write-Host ""
        Write-Host "2Ô∏è‚É£  Testes de Integra√ß√£o..." -ForegroundColor Magenta
        npm run test:integration
        
        # 3. Testes E2E
        Write-Host ""
        Write-Host "3Ô∏è‚É£  Testes E2E..." -ForegroundColor Magenta
        Write-Host "‚ö†Ô∏è  Certifique-se de que o servidor est√° rodando!" -ForegroundColor Yellow
        Start-Sleep -Seconds 2
        npx playwright test e2e/orders.spec.ts
        
        # 4. Testes de Acessibilidade
        Write-Host ""
        Write-Host "4Ô∏è‚É£  Testes de Acessibilidade..." -ForegroundColor Magenta
        npx playwright test tests/accessibility/a11y-audit.spec.ts
        
        Write-Host ""
        Write-Host "=" -NoNewline; for ($i=1; $i -le 70; $i++) { Write-Host "=" -NoNewline }; Write-Host ""
        Write-Host "‚úÖ TODOS OS TESTES CONCLU√çDOS!" -ForegroundColor Green
        Write-Host "=" -NoNewline; for ($i=1; $i -le 70; $i++) { Write-Host "=" -NoNewline }; Write-Host ""
    }
    "7" {
        Write-Host ""
        Write-Host "üìà Gerando Relat√≥rio de Cobertura..." -ForegroundColor Cyan
        Write-Host ""
        npm run test:coverage
        
        Write-Host ""
        Write-Host "üìÑ Relat√≥rio HTML dispon√≠vel em: coverage/index.html" -ForegroundColor Green
        
        # Abrir relat√≥rio no navegador
        $openBrowser = Read-Host "Abrir relat√≥rio no navegador? (s/n)"
        if ($openBrowser -eq "s" -or $openBrowser -eq "S") {
            Start-Process "coverage/index.html"
        }
    }
    "0" {
        Write-Host ""
        Write-Host "üëã Saindo..." -ForegroundColor Yellow
    }
    default {
        Write-Host ""
        Write-Host "‚ùå Op√ß√£o inv√°lida!" -ForegroundColor Red
    }
}

Write-Host ""
