name: Design System Compliance Check

on:
  pull_request:
    branches: [main, develop, 'feat/*']
    paths:
      - 'src/**/*.jsx'
      - 'src/**/*.js'
      - 'eslint-plugin-barber-design-system/**'
      - 'scripts/audit-design-system.js'

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  audit:
    name: Design System Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run Design System Audit
        id: audit
        run: |
          npm run audit:design-system
          echo "AUDIT_PASSED=$?" >> $GITHUB_ENV
        continue-on-error: true
      
      - name: Upload audit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: design-system-audit-report
          path: |
            reports/design-system-audit.json
            reports/design-system-audit.md
          retention-days: 30
      
      - name: Comment PR with violations summary
        if: always() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            try {
              const reportPath = 'reports/design-system-audit.md';
              if (!fs.existsSync(reportPath)) {
                console.log('Relatório de auditoria não encontrado');
                return;
              }
              
              const reportContent = fs.readFileSync(reportPath, 'utf8');
              
              // Extrair resumo (primeiras 50 linhas)
              const summaryLines = reportContent.split('\n').slice(0, 50);
              const summary = summaryLines.join('\n');
              
              const comment = `## 🎨 Design System Compliance Report

${summary}

<details>
<summary>📊 Ver relatório completo</summary>

\`\`\`
Download do artefato "design-system-audit-report" para ver o relatório completo
\`\`\`

</details>

---
*Gerado automaticamente pelo workflow de Design System Compliance*
`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.error('Erro ao comentar PR:', error);
            }

  lint:
    name: ESLint - Design System Rules
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npm run lint
        continue-on-error: false
      
      - name: Comment PR on lint failure
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `## ❌ ESLint - Violações de Design System Detectadas

O ESLint detectou violações de Design System que bloqueiam o merge deste PR.

### Como corrigir:

1. **Executar localmente:**
   \`\`\`bash
   npm run lint
   \`\`\`

2. **Ver violações específicas:**
   \`\`\`bash
   npm run lint -- src/path/to/file.jsx
   \`\`\`

3. **Migração automática (recomendado):**
   \`\`\`bash
   # Preview das mudanças
   npm run migrate:dry-run -- --file src/path/to/file.jsx
   
   # Aplicar correções com backup
   npm run migrate:design-system -- --file src/path/to/file.jsx --backup
   \`\`\`

### Regras do ESLint Plugin:

- \`barber-design-system/no-hardcoded-colors\` (error)
- \`barber-design-system/prefer-theme-classes\` (warn)
- \`barber-design-system/no-inline-hex-colors\` (error)

Consulte a documentação: \`eslint-plugin-barber-design-system/README.md\`

---
*Este comentário foi gerado automaticamente pelo workflow de CI/CD*
`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  conformance-check:
    name: Conformance Threshold Check
    runs-on: ubuntu-latest
    needs: [audit]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Check conformance threshold
        run: |
          npm run audit:design-system
          
          # Extrair conformidade do relatório JSON
          CONFORMANCE=$(node -e "
            const fs = require('fs');
            const report = JSON.parse(fs.readFileSync('reports/design-system-audit.json', 'utf8'));
            const filesWithViolations = report.violations ? Object.values(report.violations).reduce((sum, cat) => sum + (cat.files?.length || 0), 0) : 0;
            const totalFiles = report.totalFiles || 0;
            const conformance = totalFiles > 0 ? ((totalFiles - filesWithViolations) / totalFiles * 100).toFixed(2) : 0;
            console.log(conformance);
          ")
          
          echo "Conformidade atual: ${CONFORMANCE}%"
          
          # Threshold: 65% (não degradar)
          THRESHOLD=65
          
          if (( $(echo "$CONFORMANCE < $THRESHOLD" | bc -l) )); then
            echo "❌ Conformidade abaixo do threshold: ${CONFORMANCE}% < ${THRESHOLD}%"
            exit 1
          else
            echo "✅ Conformidade OK: ${CONFORMANCE}% >= ${THRESHOLD}%"
          fi
